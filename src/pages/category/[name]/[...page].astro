---
import type { GetStaticPathsOptions } from "astro";
import Cards from "@/components/Cards.astro";
import CategoryTab from "@/components/CategoryTab.astro";
import Pager from "@/components/Pager.astro";
import Title from "@/components/Title.astro";
import Layout from "@/layouts/Layout.astro";

import { getCategories, getAllWorks } from "@/libs/newt";

export const getStaticPaths = async ({ paginate }: GetStaticPathsOptions) => {
  const categories = await getCategories();

  const allWorks = await getAllWorks([
    "id",
    "title",
    "description",
    "images",
    "category"
  ]);

  return categories.flatMap(({ name }) => {
    const works = allWorks.filter((work) => work.category.name === name);

    return paginate(works, {
      params: { name },
      props: { categories },
      pageSize: 12
    });
  });
};

const { name } = Astro.params;
const { page, categories } = Astro.props;

if (!name) {
  throw new Error("nameがありません");
}
---

<Layout title={name} pagefindIgnore>
  <Title title="works" />
  <CategoryTab current={name} contents={categories} />
  <Cards contents={page.data} />
  {
    page.lastPage > 1 && (
      <Pager
        basePath={`/category/${name}`}
        currentPage={page.currentPage}
        totalPage={page.lastPage}
        url={page.url}
      />
    )
  }
</Layout>
